arrange(desc(n))
fit <- sampling(lincolnpeterson, data = dlist, refresh = 0,
chains = 4, cores = 4, iter = 4000)
print(fit, probs = c(.95, .05))
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
scale_y_continuous("Density", NULL) +
scale_x_continuous("Posterior fish population size") +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
Mode(round(posterior$N, 1))
blogdown::serve_site()
library(tidyverse)
library(rstan)
# Data collection
dlist <- list(
tagged = 68,
captured = 219,
returned = 16)
dlist
tagged / (returned / captured)
library(tidyverse)
library(rstan)
# Data collection
dlist <- list(
tagged = 68,
captured = 219,
returned = 16)
dlist
with(dlist, tagged / (returned / captured))
fit <- sampling(lincolnpeterson, data = dlist, refresh = 0,
chains = 4, cores = 4, iter = 4000)
print(fit, probs = c(.95, .05))
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
scale_y_continuous("Density", NULL) +
scale_x_continuous("Posterior fish population size") +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
blogdown::serve_site()
map <- with(dlist, tagged / (returned / captured))
map
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
geom_vline(xintercept = map) +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
scale_y_continuous("Density", NULL) +
scale_x_continuous("Posterior fish population size") +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent")
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
scale_y_continuous("Density", NULL) +
scale_x_continuous("Posterior fish population size") +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
scale_y_continuous("Density", NULL) +
scale_x_continuous("Posterior fish population size") +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
caption("YO") +
scale_y_continuous("Density", NULL) +
scale_x_continuous("Posterior fish population size") +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier") +
scale_y_continuous("Density", NULL) +
scale_x_continuous("Posterior fish population size") +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
c(ci, m, map)
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier") +
scale_y_continuous("Density", breaks = c(ci, m, map)) +
scale_x_continuous("Posterior fish population size") +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier") +
scale_y_continuous("Density", breaks = as.numeric(c(ci, m, map))) +
scale_x_continuous("Posterior fish population size") +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier") +
scale_y_continuous("Density") +
scale_x_continuous("Posterior fish population size", breaks = as.numeric(c(ci, m, map))) +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier") +
scale_y_continuous("Density") +
scale_x_continuous("Posterior fish population size", breaks = as.numeric(c(ci, m, map, seq(500, 2000, 500)))) +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier") +
scale_y_continuous("Density") +
scale_x_continuous("Posterior fish population size", breaks = as.numeric(c(ci, m, map, seq(500, 2000, 1000)))) +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map, linetype=2) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier") +
scale_y_continuous("Density") +
scale_x_continuous("Posterior fish population size", breaks = as.numeric(c(ci, m, map, seq(500, 2000, 1000)))) +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map, linetype=2) +
geom_vline(xintercept = m) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier") +
scale_y_continuous("Density") +
scale_x_continuous("Posterior fish population size", breaks = as.numeric(c(ci, m, map, seq(500, 2000, 1000)))) +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map, linetype=2) +
geom_vline(xintercept = m) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier") +
scale_y_continuous("Density") +
scale_x_continuous("Posterior fish population size", breaks = as.numeric(c(ci, m, map, seq(500, 2000, 1000)))) +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map, linetype=2) +
geom_vline(xintercept = m) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier (dotted line) and the mean (solid line)") +
scale_y_continuous("Density") +
scale_x_continuous("Posterior fish population size", breaks = as.numeric(c(ci, m, map, seq(500, 2000, 1000)))) +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
33
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map, linetype=2) +
geom_vline(xintercept = m) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier (dotted line) and the mean (solid line)") +
scale_y_continuous("Density") +
scale_x_continuous("Posterior fish population size", breaks = as.numeric(c(ci, m, map))) +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map, linetype=2) +
geom_vline(xintercept = m) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier (dotted line) and the mean (solid line)") +
scale_y_continuous("Density") +
scale_x_continuous("Posterior fish population size", breaks = as.numeric(c(ci, m, map))) +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
setwd("~/Documents/personal/site")
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
library(tidyverse)
library(rstan)
# Data collection
dlist <- list(
tagged = 68,
captured = 219,
returned = 16)
dlist
map <- with(dlist, tagged / (returned / captured))
map
fit <- sampling(lincolnpeterson, data = dlist, refresh = 0,
chains = 4, cores = 4, iter = 4000)
print(fit, probs = c(.95, .05))
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map, linetype=2) +
geom_vline(xintercept = m) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier (dotted line) and the mean (solid line)") +
scale_y_continuous("Density") +
scale_x_continuous("Posterior fish population size", breaks = as.numeric(c(ci, m, map))) +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
fit <- sampling(lincolnpeterson, data = dlist, refresh = 0,
chains = 4, cores = 4, iter = 4000)
print(fit, probs = c(.95, .05))
setwd("~/Documents/personal/site/content/post")
git status
git status
git
blogdown::serve_site()
2_2
2+2
fit <- sampling(lincolnpeterson, data = dlist, refresh = 0,
chains = 4, cores = 4, iter = 4000)
print(fit, probs = c(.95, .05))
posterior <- rstan::extract(fit)
dens <- density(posterior$N)
df_dens <- tibble(
x = dens$x,
y = dens$y)
ci <- round(as_vector(HDInterval::hdi(posterior$N)), 1)
m <- round(mean(posterior$N), 1)
df_dens %>%
ggplot(aes(x, y)) +
geom_vline(xintercept = map, linetype=2) +
geom_vline(xintercept = m) +
geom_line() +
geom_ribbon(data = filter(df_dens, x > ci[[1]] & x < ci[[2]]),
aes(ymin = 0, ymax = y),
fill = "grey", color = "transparent") +
annotate("text", x = 975, y = .0002, label = glue::glue("95% Credibe Interval\n[{ci[1]}, {ci[2]}]")) +
annotate("text", x = 975, y = .0012, label = glue::glue("Mean: {m}")) +
ggtitle("Bayesian estimation of fish population", "Results from a Lincoln-Peterson simulation") +
labs(caption = "The distribution is overlayed on top of the MAP estimate calculated earlier (dotted line) and the mean (solid line)") +
scale_y_continuous("Density") +
scale_x_continuous("Posterior fish population size", breaks = as.numeric(c(ci, m, map))) +
theme(panel.background = element_rect(color = "black", fill = "transparent"),
panel.grid = element_blank())
blogdown::stop_server()
